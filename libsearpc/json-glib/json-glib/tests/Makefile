# Makefile.in generated by automake 1.11.3 from Makefile.am.
# json-glib/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# JSON-GLib - JSON reader and writer library

# custom rules for quiet builds


pkgdatadir = $(datadir)/json-glib
pkgincludedir = $(includedir)/json-glib
pkglibdir = $(libdir)/json-glib
pkglibexecdir = $(libexecdir)/json-glib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-openbsd5.3
host_triplet = x86_64-unknown-openbsd5.3
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/build/autotools/Makefile.am.gtest \
	$(top_srcdir)/build/autotools/Makefile.am.silent
noinst_PROGRAMS = $(am__EXEEXT_2)
subdir = json-glib/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/autotools/libtool.m4 \
	$(top_srcdir)/build/autotools/ltoptions.m4 \
	$(top_srcdir)/build/autotools/ltsugar.m4 \
	$(top_srcdir)/build/autotools/ltversion.m4 \
	$(top_srcdir)/build/autotools/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =
am__EXEEXT_2 = array$(EXEEXT) boxed$(EXEEXT) builder$(EXEEXT) \
	generator$(EXEEXT) gvariant$(EXEEXT) node$(EXEEXT) \
	object$(EXEEXT) parser$(EXEEXT) path$(EXEEXT) reader$(EXEEXT) \
	serialize-simple$(EXEEXT) serialize-complex$(EXEEXT) \
	serialize-full$(EXEEXT) $(am__EXEEXT_1)
PROGRAMS = $(noinst_PROGRAMS)
array_SOURCES = array.c
array_OBJECTS = array.$(OBJEXT)
array_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
array_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
boxed_SOURCES = boxed.c
boxed_OBJECTS = boxed.$(OBJEXT)
boxed_LDADD = $(LDADD)
boxed_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
builder_SOURCES = builder.c
builder_OBJECTS = builder.$(OBJEXT)
builder_LDADD = $(LDADD)
builder_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
generator_SOURCES = generator.c
generator_OBJECTS = generator.$(OBJEXT)
generator_LDADD = $(LDADD)
generator_DEPENDENCIES = ../libsearpc-json-glib.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
gvariant_SOURCES = gvariant.c
gvariant_OBJECTS = gvariant.$(OBJEXT)
gvariant_LDADD = $(LDADD)
gvariant_DEPENDENCIES = ../libsearpc-json-glib.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
node_SOURCES = node.c
node_OBJECTS = node.$(OBJEXT)
node_LDADD = $(LDADD)
node_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
object_SOURCES = object.c
object_OBJECTS = object.$(OBJEXT)
object_LDADD = $(LDADD)
object_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
parser_SOURCES = parser.c
parser_OBJECTS = parser.$(OBJEXT)
parser_LDADD = $(LDADD)
parser_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
path_SOURCES = path.c
path_OBJECTS = path.$(OBJEXT)
path_LDADD = $(LDADD)
path_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
reader_SOURCES = reader.c
reader_OBJECTS = reader.$(OBJEXT)
reader_LDADD = $(LDADD)
reader_DEPENDENCIES = ../libsearpc-json-glib.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
serialize_complex_SOURCES = serialize-complex.c
serialize_complex_OBJECTS = serialize-complex.$(OBJEXT)
serialize_complex_LDADD = $(LDADD)
serialize_complex_DEPENDENCIES = ../libsearpc-json-glib.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
serialize_full_SOURCES = serialize-full.c
serialize_full_OBJECTS = serialize-full.$(OBJEXT)
serialize_full_LDADD = $(LDADD)
serialize_full_DEPENDENCIES = ../libsearpc-json-glib.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
serialize_simple_SOURCES = serialize-simple.c
serialize_simple_OBJECTS = serialize-simple.$(OBJEXT)
serialize_simple_LDADD = $(LDADD)
serialize_simple_DEPENDENCIES = ../libsearpc-json-glib.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = array.c boxed.c builder.c generator.c gvariant.c node.c \
	object.c parser.c path.c reader.c serialize-complex.c \
	serialize-full.c serialize-simple.c
DIST_SOURCES = array.c boxed.c builder.c generator.c gvariant.c node.c \
	object.c parser.c path.c reader.c serialize-complex.c \
	serialize-full.c serialize-simple.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/build/missing --run aclocal-1.11 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/build/missing --run autoconf
AUTOHEADER = ${SHELL} /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/build/missing --run autoheader
AUTOMAKE = ${SHELL} /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/build/missing --run automake-1.11
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -I/usr/local/include
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GETTEXT_PACKAGE = json-glib-1.0
GLIB_CFLAGS = -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include
GLIB_COMPILE_RESOURCES = glib-compile-resources
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/usr/local/lib -lglib-2.0 -lintl -liconv
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr/local
GOBJECT_QUERY = gobject-query
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JSON_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include
JSON_DEBUG_CFLAGS = -DJSON_ENABLE_DEBUG -DG_DISABLE_CAST_CHECKS
JSON_LIBS = -L/usr/local/lib -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lintl -liconv
JSON_LT_LDFLAGS = -version-info 1400:2:1400
JSON_MAJOR_VERSION = 0
JSON_MICRO_VERSION = 2
JSON_MINOR_VERSION = 14
JSON_RELEASE_STATUS = release
JSON_VERSION = 0.14.2
LD = /usr/bin/ld
LDFLAGS = -L/usr/local/lib
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/build/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../../build/install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = json-glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=json-glib
PACKAGE_NAME = json-glib
PACKAGE_STRING = json-glib 0.14.2
PACKAGE_TARNAME = json-glib
PACKAGE_URL = http://live.gnome.org/JsonGlib
PACKAGE_VERSION = 0.14.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.14.2
abs_builddir = /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/json-glib/tests
abs_srcdir = /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/json-glib/tests
abs_top_builddir = /home/forth/projets/seafile-1.7.0/libsearpc/json-glib
abs_top_srcdir = /home/forth/projets/seafile-1.7.0/libsearpc/json-glib
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar chf - "$$tardir"
am__untar = tar xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-openbsd5.3
build_alias = 
build_cpu = x86_64
build_os = openbsd5.3
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-openbsd5.3
host_alias = 
host_cpu = x86_64
host_os = openbsd5.3
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/forth/projets/seafile-1.7.0/libsearpc/json-glib/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/build/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
GTESTER = gtester
GTESTER_REPORT = gtester-report

# initialize variables for unconditional += appending
EXTRA_DIST = stream-load.json
TEST_PROGS = array boxed builder generator gvariant node object parser \
	path reader serialize-simple serialize-complex serialize-full \
	$(NULL)
QUIET_GEN = $(AM_V_GEN)
QUIET_LN = $(QUIET_LN_$(V))
QUIET_LN_ = $(QUIET_LN_$(AM_DEFAULT_VERBOSITY))
QUIET_LN_0 = @echo '  LN     '$@;
QUIET_RM = $(QUIET_RM_$(V))
QUIET_RM_ = $(QUIET_RM_$(AM_DEFAULT_VERBOSITY))
QUIET_RM_0 = @echo '  RM     '$@;
NULL = 
DISTCLEANFILES = 
INCLUDES = \
	-I$(top_srcdir)			\
	-I$(top_srcdir)/json-glib	\
	$(NULL)

AM_CPPFLAGS = $(JSON_DEBUG_CFLAGS) -DTESTS_DATA_DIR=\""$(top_srcdir)/json-glib/tests"\"
AM_CFLAGS = -g $(JSON_CFLAGS) $(MAINTAINER_CFLAGS)
LDADD = \
	../libsearpc-json-glib.la \
	$(JSON_LIBS) \
	$(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/autotools/Makefile.am.gtest $(top_srcdir)/build/autotools/Makefile.am.silent $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign json-glib/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign json-glib/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/build/autotools/Makefile.am.gtest $(top_srcdir)/build/autotools/Makefile.am.silent:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) $(EXTRA_array_DEPENDENCIES) 
	@rm -f array$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(array_OBJECTS) $(array_LDADD) $(LIBS)
boxed$(EXEEXT): $(boxed_OBJECTS) $(boxed_DEPENDENCIES) $(EXTRA_boxed_DEPENDENCIES) 
	@rm -f boxed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(boxed_OBJECTS) $(boxed_LDADD) $(LIBS)
builder$(EXEEXT): $(builder_OBJECTS) $(builder_DEPENDENCIES) $(EXTRA_builder_DEPENDENCIES) 
	@rm -f builder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(builder_OBJECTS) $(builder_LDADD) $(LIBS)
generator$(EXEEXT): $(generator_OBJECTS) $(generator_DEPENDENCIES) $(EXTRA_generator_DEPENDENCIES) 
	@rm -f generator$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generator_OBJECTS) $(generator_LDADD) $(LIBS)
gvariant$(EXEEXT): $(gvariant_OBJECTS) $(gvariant_DEPENDENCIES) $(EXTRA_gvariant_DEPENDENCIES) 
	@rm -f gvariant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gvariant_OBJECTS) $(gvariant_LDADD) $(LIBS)
node$(EXEEXT): $(node_OBJECTS) $(node_DEPENDENCIES) $(EXTRA_node_DEPENDENCIES) 
	@rm -f node$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(node_OBJECTS) $(node_LDADD) $(LIBS)
object$(EXEEXT): $(object_OBJECTS) $(object_DEPENDENCIES) $(EXTRA_object_DEPENDENCIES) 
	@rm -f object$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(object_OBJECTS) $(object_LDADD) $(LIBS)
parser$(EXEEXT): $(parser_OBJECTS) $(parser_DEPENDENCIES) $(EXTRA_parser_DEPENDENCIES) 
	@rm -f parser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parser_OBJECTS) $(parser_LDADD) $(LIBS)
path$(EXEEXT): $(path_OBJECTS) $(path_DEPENDENCIES) $(EXTRA_path_DEPENDENCIES) 
	@rm -f path$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(path_OBJECTS) $(path_LDADD) $(LIBS)
reader$(EXEEXT): $(reader_OBJECTS) $(reader_DEPENDENCIES) $(EXTRA_reader_DEPENDENCIES) 
	@rm -f reader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reader_OBJECTS) $(reader_LDADD) $(LIBS)
serialize-complex$(EXEEXT): $(serialize_complex_OBJECTS) $(serialize_complex_DEPENDENCIES) $(EXTRA_serialize_complex_DEPENDENCIES) 
	@rm -f serialize-complex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(serialize_complex_OBJECTS) $(serialize_complex_LDADD) $(LIBS)
serialize-full$(EXEEXT): $(serialize_full_OBJECTS) $(serialize_full_DEPENDENCIES) $(EXTRA_serialize_full_DEPENDENCIES) 
	@rm -f serialize-full$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(serialize_full_OBJECTS) $(serialize_full_LDADD) $(LIBS)
serialize-simple$(EXEEXT): $(serialize_simple_OBJECTS) $(serialize_simple_DEPENDENCIES) $(EXTRA_serialize_simple_DEPENDENCIES) 
	@rm -f serialize-simple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(serialize_simple_OBJECTS) $(serialize_simple_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/array.Po
include ./$(DEPDIR)/boxed.Po
include ./$(DEPDIR)/builder.Po
include ./$(DEPDIR)/generator.Po
include ./$(DEPDIR)/gvariant.Po
include ./$(DEPDIR)/node.Po
include ./$(DEPDIR)/object.Po
include ./$(DEPDIR)/parser.Po
include ./$(DEPDIR)/path.Po
include ./$(DEPDIR)/reader.Po
include ./$(DEPDIR)/serialize-complex.Po
include ./$(DEPDIR)/serialize-full.Po
include ./$(DEPDIR)/serialize-simple.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


### testing rules

# test: run all tests in cwd and subdirs
test: test-nonrecursive
	@for subdir in $(SUBDIRS) . ; do \
	  test "$$subdir" = "." -o "$$subdir" = "po" || \
	  ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	done

# test-nonrecursive: run tests only in cwd
test-nonrecursive: ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || ${GTESTER} --verbose ${TEST_PROGS}

# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>'            > $@.xml ; \
	    echo '<report-collection>'             >> $@.xml ; \
	    echo '<info>'                          >> $@.xml ; \
	    echo '  <package>$(PACKAGE)</package>' >> $@.xml ; \
	    echo '  <version>$(VERSION)</version>' >> $@.xml ; \
	    echo '</info>'                         >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report test-nonrecursive

# run tests in cwd as part of make check
check-local: test-nonrecursive

-include $(top_srcdir)/build/autotools/Makefile.am.gitignore

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
